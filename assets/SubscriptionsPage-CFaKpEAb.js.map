{"version":3,"file":"SubscriptionsPage-CFaKpEAb.js","sources":["../../src/components/SubscriptionsPage.vue"],"sourcesContent":["<template>\n    <h1 v-t=\"'titles.subscriptions'\" class=\"my-4 text-center font-bold\" />\n    <!-- import / export section -->\n    <div class=\"flex flex-wrap justify-between\">\n        <div class=\"flex gap-1\">\n            <!-- import json/csv -->\n            <button class=\"btn\">\n                <router-link v-t=\"'actions.import_from_json_csv'\" to=\"/import\" />\n            </button>\n            <!-- export to json -->\n            <button v-t=\"'actions.export_to_json'\" class=\"btn\" @click=\"exportHandler\" />\n        </div>\n        <div class=\"m-1 flex flex-wrap gap-1\">\n            <!-- import channel groups to json-->\n            <div>\n                <label\n                    for=\"fileSelector\"\n                    class=\"btn\"\n                    v-text=\"`${$t('actions.import_from_json')} (${$t('titles.channel_groups')})`\"\n                />\n                <input\n                    id=\"fileSelector\"\n                    ref=\"fileSelector\"\n                    type=\"file\"\n                    class=\"hidden\"\n                    multiple=\"multiple\"\n                    @change=\"importGroupsHandler\"\n                />\n            </div>\n\n            <!-- export channel groups to json  -->\n            <button\n                class=\"btn\"\n                @click=\"exportGroupsHandler\"\n                v-text=\"`${$t('actions.export_to_json')} (${$t('titles.channel_groups')})`\"\n            />\n        </div>\n        <!-- subscriptions count, only shown if there are any  -->\n        <div v-if=\"subscriptions.length > 0\" class=\"flex self-center gap-1\">\n            <i18n-t keypath=\"subscriptions.subscribed_channels_count\">{{ subscriptions.length }}</i18n-t>\n        </div>\n    </div>\n    <br />\n    <hr />\n    <div class=\"w-full flex flex-wrap\">\n        <button\n            v-for=\"group in channelGroups\"\n            :key=\"group.groupName\"\n            class=\"btn mx-1 w-max\"\n            :class=\"{ selected: selectedGroup === group }\"\n            @click=\"selectGroup(group)\"\n        >\n            <span v-text=\"group.groupName !== '' ? group.groupName : $t('video.all')\" />\n            <div v-if=\"group.groupName != '' && selectedGroup == group\">\n                <i class=\"i-fa6-solid:pen mx-2\" @click=\"showEditGroupModal = true\" />\n                <i class=\"i-fa6-solid:circle-minus mx-2\" @click=\"groupToDelete = group.groupName\" />\n            </div>\n        </button>\n        <ConfirmModal\n            v-if=\"groupToDelete != null\"\n            :message=\"$t('actions.delete_group_confirm')\"\n            @close=\"groupToDelete = null\"\n            @confirm=\"deleteGroup(groupToDelete)\"\n        />\n        <button class=\"btn mx-1\" @click=\"showCreateGroupModal = true\">\n            <i class=\"i-fa6-solid:circle-plus\" />\n        </button>\n    </div>\n    <br />\n    <hr />\n    <!-- Subscriptions card list -->\n    <div class=\"xl:grid xl:grid-cols-5 <md:flex-wrap\">\n        <!-- channel info card -->\n        <div\n            v-for=\"subscription in filteredSubscriptions\"\n            :key=\"subscription.url\"\n            class=\"col m-2 border border-gray-500 rounded-lg p-1\"\n        >\n            <router-link :to=\"subscription.url\" class=\"text-4x4 flex p-2 font-bold\">\n                <img :src=\"subscription.avatar\" class=\"h-[fit-content] rounded-full\" width=\"48\" height=\"48\" />\n                <span class=\"mx-2 self-center\" v-text=\"subscription.name\" />\n            </router-link>\n            <!-- subscribe / unsubscribe btn -->\n            <button\n                v-t=\"`actions.${subscription.subscribed ? 'unsubscribe' : 'subscribe'}`\"\n                class=\"btn mt-2 w-full\"\n                @click=\"handleButton(subscription)\"\n            />\n        </div>\n    </div>\n    <br />\n\n    <CreateGroupModal\n        v-if=\"showCreateGroupModal\"\n        :on-create-group=\"createGroup\"\n        @close=\"showCreateGroupModal = false\"\n    />\n\n    <ModalComponent v-if=\"showEditGroupModal\" @close=\"showEditGroupModal = false\">\n        <div class=\"mb-5 mt-3 flex justify-between\">\n            <input v-model=\"editedGroupName\" type=\"text\" class=\"input\" />\n            <button v-t=\"'actions.okay'\" class=\"btn\" :placeholder=\"$t('actions.group_name')\" @click=\"editGroupName()\" />\n        </div>\n        <div class=\"mb-2 mt-3 h-[80vh] flex flex-col overflow-y-scroll pr-2\">\n            <div v-for=\"subscription in subscriptions\" :key=\"subscription.name\">\n                <div class=\"mr-3 flex items-center justify-between\">\n                    <a :href=\"subscription.url\" target=\"_blank\" class=\"flex items-center overflow-hidden\">\n                        <img :src=\"subscription.avatar\" class=\"h-8 w-8 rounded-full\" />\n                        <span class=\"ml-2\">{{ subscription.name }}</span>\n                    </a>\n                    <input\n                        type=\"checkbox\"\n                        class=\"checkbox\"\n                        :checked=\"selectedGroup.channels.includes(subscription.url.substr(-24))\"\n                        @change=\"checkedChange(subscription)\"\n                    />\n                </div>\n                <hr />\n            </div>\n        </div>\n    </ModalComponent>\n</template>\n\n<script>\nimport ModalComponent from \"./ModalComponent.vue\";\nimport CreateGroupModal from \"./CreateGroupModal.vue\";\nimport ConfirmModal from \"./ConfirmModal.vue\";\n\nexport default {\n    components: { ModalComponent, CreateGroupModal, ConfirmModal },\n    data() {\n        return {\n            subscriptions: [],\n            selectedGroup: {\n                groupName: \"\",\n                channels: [],\n            },\n            channelGroups: [],\n            showCreateGroupModal: false,\n            showEditGroupModal: false,\n            editedGroupName: \"\",\n            groupToDelete: null,\n        };\n    },\n    computed: {\n        filteredSubscriptions(_this) {\n            return _this.selectedGroup.groupName == \"\"\n                ? _this.subscriptions\n                : _this.subscriptions.filter(channel => _this.selectedGroup.channels.includes(channel.url.substr(-24)));\n        },\n    },\n    mounted() {\n        this.fetchSubscriptions().then(json => {\n            if (json.error) {\n                alert(json.error);\n                return;\n            }\n\n            this.subscriptions = json;\n            this.subscriptions.forEach(subscription => (subscription.subscribed = true));\n        });\n\n        this.channelGroups.push(this.selectedGroup);\n        if (!window.db) return;\n\n        this.loadChannelGroups();\n    },\n    activated() {\n        document.title = \"Subscriptions - Piped\";\n    },\n    methods: {\n        async loadChannelGroups() {\n            const groups = await this.getChannelGroups();\n            this.channelGroups.push(...groups);\n        },\n        handleButton(subscription) {\n            const channelId = subscription.url.split(\"/\")[2];\n            if (this.authenticated) {\n                this.fetchJson(this.authApiUrl() + (subscription.subscribed ? \"/unsubscribe\" : \"/subscribe\"), null, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        channelId: channelId,\n                    }),\n                    headers: {\n                        Authorization: this.getAuthToken(),\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n            } else {\n                this.handleLocalSubscriptions(channelId);\n            }\n            subscription.subscribed = !subscription.subscribed;\n        },\n        exportHandler() {\n            const subscriptions = [];\n            this.subscriptions.forEach(subscription => {\n                subscriptions.push({\n                    url: \"https://www.youtube.com\" + subscription.url,\n                    name: subscription.name,\n                    service_id: 0,\n                });\n            });\n            const json = JSON.stringify({\n                app_version: \"\",\n                app_version_int: 0,\n                subscriptions: subscriptions,\n            });\n            this.download(json, \"subscriptions.json\", \"application/json\");\n        },\n        selectGroup(group) {\n            this.selectedGroup = group;\n            this.editedGroupName = group.groupName;\n        },\n        createGroup(newGroupName) {\n            if (!newGroupName || this.channelGroups.some(group => group.groupName == newGroupName)) return;\n\n            const newGroup = {\n                groupName: newGroupName,\n                channels: [],\n            };\n            this.channelGroups.push(newGroup);\n            this.createOrUpdateChannelGroup(newGroup);\n\n            this.showCreateGroupModal = false;\n        },\n        editGroupName() {\n            const oldGroupName = this.selectedGroup.groupName;\n            const newGroupName = this.editedGroupName;\n\n            // the group mustn't yet exist and the name can't be empty\n            if (!newGroupName || newGroupName == oldGroupName) return;\n            if (this.channelGroups.some(group => group.groupName == newGroupName)) return;\n\n            // create a new group with the same info and delete the old one\n            this.selectedGroup.groupName = newGroupName;\n            this.createOrUpdateChannelGroup(this.selectedGroup);\n            this.deleteChannelGroup(oldGroupName);\n\n            this.showEditGroupModal = false;\n        },\n        deleteGroup(group) {\n            this.deleteChannelGroup(group);\n            this.channelGroups = this.channelGroups.filter(g => g.groupName != group);\n            this.selectedGroup = this.channelGroups[0] || {};\n            this.groupToDelete = null;\n        },\n        checkedChange(subscription) {\n            const channelId = subscription.url.substr(-24);\n            this.selectedGroup.channels = this.selectedGroup.channels.includes(channelId)\n                ? this.selectedGroup.channels.filter(channel => channel != channelId)\n                : this.selectedGroup.channels.concat(channelId);\n            this.createOrUpdateChannelGroup(this.selectedGroup);\n        },\n        async importGroupsHandler() {\n            const files = this.$refs.fileSelector.files;\n            for (let file of files) {\n                const groups = JSON.parse(await file.text()).groups;\n                for (let group of groups) {\n                    this.createOrUpdateChannelGroup(group);\n                    this.channelGroups.push(group);\n                }\n            }\n        },\n        exportGroupsHandler() {\n            const json = {\n                format: \"Piped\",\n                version: 1,\n                groups: this.channelGroups.slice(1),\n            };\n            this.download(JSON.stringify(json), \"channel_groups.json\", \"application/json\");\n        },\n    },\n};\n</script>\n\n<style>\n.selected {\n    border: 0.1rem outset red;\n}\n</style>\n"],"names":["_sfc_main","ModalComponent","CreateGroupModal","ConfirmModal","_this","channel","json","subscription","groups","channelId","subscriptions","group","newGroupName","newGroup","oldGroupName","g","files","file","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createElementVNode","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_15","_hoisted_16","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_openBlock","_createElementBlock","_Fragment","_withDirectives","_createVNode","_component_router_link","$options","args","_toDisplayString","_ctx","$data","_hoisted_8","_component_i18n_t","_withCtx","_createTextVNode","_createCommentVNode","_hoisted_9","_hoisted_10","_renderList","_normalizeClass","$event","_hoisted_14","_createBlock","_component_ConfirmModal","_cache","_hoisted_17","_hoisted_18","_hoisted_19","_directive_t","_hoisted_24","_component_CreateGroupModal","_component_ModalComponent","_hoisted_33"],"mappings":"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"}