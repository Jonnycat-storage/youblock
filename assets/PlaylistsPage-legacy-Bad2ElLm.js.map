{"version":3,"file":"PlaylistsPage-legacy-Bad2ElLm.js","sources":["../../src/components/PlaylistsPage.vue"],"sourcesContent":["<template>\n    <h2 v-t=\"'titles.playlists'\" class=\"my-4 font-bold\" />\n\n    <div class=\"mb-3 flex justify-between\">\n        <button v-t=\"'actions.create_playlist'\" class=\"btn\" @click=\"showCreatePlaylistModal = true\" />\n        <div class=\"flex\">\n            <button v-if=\"playlists.length > 0\" v-t=\"'actions.export_to_json'\" class=\"btn\" @click=\"exportPlaylists\" />\n            <input\n                id=\"fileSelector\"\n                ref=\"fileSelector\"\n                type=\"file\"\n                class=\"hidden\"\n                multiple=\"multiple\"\n                @change=\"importPlaylists\"\n            />\n            <label v-t=\"'actions.import_from_json_csv'\" for=\"fileSelector\" class=\"btn ml-2\" />\n        </div>\n    </div>\n\n    <div class=\"video-grid\">\n        <div v-for=\"playlist in playlists\" :key=\"playlist.id\">\n            <router-link :to=\"`/playlist?list=${playlist.id}`\">\n                <img class=\"w-full\" :src=\"playlist.thumbnail\" alt=\"thumbnail\" />\n                <div class=\"relative text-sm\">\n                    <span\n                        class=\"thumbnail-overlay thumbnail-right\"\n                        v-text=\"`${playlist.videos} ${$t('video.videos')}`\"\n                    />\n                </div>\n                <p\n                    style=\"display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical\"\n                    class=\"link my-2 flex overflow-hidden\"\n                    :title=\"playlist.name\"\n                    v-text=\"playlist.name\"\n                />\n            </router-link>\n            <button v-t=\"'actions.edit_playlist'\" class=\"btn h-auto\" @click=\"showPlaylistEditModal(playlist)\" />\n            <button v-t=\"'actions.delete_playlist'\" class=\"btn ml-2 h-auto\" @click=\"playlistToDelete = playlist.id\" />\n            <ModalComponent v-if=\"playlist.id == playlistToEdit\" @close=\"playlistToEdit = null\">\n                <div class=\"flex flex-col gap-2\">\n                    <h2 v-t=\"'actions.edit_playlist'\" />\n                    <input\n                        v-model=\"newPlaylistName\"\n                        class=\"input\"\n                        type=\"text\"\n                        :placeholder=\"$t('actions.playlist_name')\"\n                    />\n                    <input\n                        v-model=\"newPlaylistDescription\"\n                        class=\"input\"\n                        type=\"text\"\n                        :placeholder=\"$t('actions.playlist_description')\"\n                    />\n                    <button v-t=\"'actions.okay'\" class=\"btn ml-auto\" @click=\"editPlaylist(playlist)\" />\n                </div>\n            </ModalComponent>\n            <ConfirmModal\n                v-if=\"playlistToDelete == playlist.id\"\n                :message=\"$t('actions.delete_playlist_confirm')\"\n                @close=\"playlistToDelete = null\"\n                @confirm=\"onDeletePlaylist(playlist.id)\"\n            />\n        </div>\n    </div>\n    <hr />\n\n    <h2 v-t=\"'titles.bookmarks'\" class=\"my-4 font-bold\" />\n\n    <div v-if=\"bookmarks\" class=\"video-grid\">\n        <router-link\n            v-for=\"(playlist, index) in bookmarks\"\n            :key=\"playlist.playlistId\"\n            :to=\"`/playlist?list=${playlist.playlistId}`\"\n        >\n            <img class=\"w-full\" :src=\"playlist.thumbnail\" alt=\"thumbnail\" />\n            <div class=\"relative text-sm\">\n                <span class=\"thumbnail-overlay thumbnail-right\" v-text=\"`${playlist.videos} ${$t('video.videos')}`\" />\n                <div class=\"absolute bottom-100px right-5px z-100 px-5px\" @click.prevent=\"removeBookmark(index)\">\n                    <i class=\"i-fa6-solid:bookmark ml-3\" />\n                </div>\n            </div>\n            <p\n                style=\"display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical\"\n                class=\"link my-2 flex overflow-hidden\"\n                :title=\"playlist.name\"\n                v-text=\"playlist.name\"\n            />\n            <a :href=\"playlist.uploaderUrl\" class=\"flex items-center\">\n                <img class=\"h-32px w-32px rounded-full\" :src=\"playlist.uploaderAvatar\" />\n                <span class=\"ml-3 hover:underline\" v-text=\"playlist.uploader\" />\n            </a>\n        </router-link>\n    </div>\n    <br />\n    <CreatePlaylistModal\n        v-if=\"showCreatePlaylistModal\"\n        @close=\"showCreatePlaylistModal = false\"\n        @created=\"fetchPlaylists\"\n    />\n</template>\n\n<script>\nimport ConfirmModal from \"./ConfirmModal.vue\";\nimport ModalComponent from \"./ModalComponent.vue\";\nimport CreatePlaylistModal from \"./CreatePlaylistModal.vue\";\n\nexport default {\n    components: { ConfirmModal, ModalComponent, CreatePlaylistModal },\n    data() {\n        return {\n            playlists: [],\n            bookmarks: [],\n            playlistToDelete: null,\n            playlistToEdit: null,\n            newPlaylistName: \"\",\n            newPlaylistDescription: \"\",\n            showCreatePlaylistModal: false,\n        };\n    },\n    mounted() {\n        this.fetchPlaylists();\n        this.loadPlaylistBookmarks();\n    },\n    activated() {\n        document.title = this.$t(\"titles.playlists\") + \" - Piped\";\n    },\n    methods: {\n        fetchPlaylists() {\n            this.getPlaylists().then(json => {\n                this.playlists = json;\n            });\n        },\n        showPlaylistEditModal(playlist) {\n            this.newPlaylistName = playlist.name;\n            this.newPlaylistDescription = playlist.description;\n            this.playlistToEdit = playlist.id;\n        },\n        editPlaylist(selectedPlaylist) {\n            // save the new name and description since they could be overwritten during the http request\n            const newName = this.newPlaylistName;\n            const newDescription = this.newPlaylistDescription;\n            if (newName != selectedPlaylist.name) {\n                this.renamePlaylist(selectedPlaylist.id, newName).then(json => {\n                    if (json.error) alert(json.error);\n                    else selectedPlaylist.name = newName;\n                });\n            }\n            if (newDescription != selectedPlaylist.description) {\n                this.changePlaylistDescription(selectedPlaylist.id, newDescription).then(json => {\n                    if (json.error) alert(json.error);\n                    else selectedPlaylist.description = newDescription;\n                });\n            }\n            this.playlistToEdit = null;\n        },\n        onDeletePlaylist(id) {\n            this.deletePlaylist(id).then(json => {\n                if (json.error) alert(json.error);\n                else this.playlists = this.playlists.filter(playlist => playlist.id !== id);\n            });\n            this.playlistToDelete = null;\n        },\n        async exportPlaylists() {\n            if (!this.playlists) return;\n            let json = {\n                format: \"Piped\",\n                version: 1,\n                playlists: [],\n            };\n            let tasks = this.playlists.map(playlist => this.fetchPlaylistJson(playlist.id));\n            json.playlists = await Promise.all(tasks);\n            this.download(JSON.stringify(json), \"playlists.json\", \"application/json\");\n        },\n        async fetchPlaylistJson(playlistId) {\n            let playlist = await this.getPlaylist(playlistId);\n            return {\n                name: playlist.name,\n                // possible other types: history, watch later, ...\n                type: \"playlist\",\n                // as Invidious supports public and private playlists\n                visibility: \"private\",\n                // list of the videos, starting with \"https://youtube.com\" to clarify that those are YT videos\n                videos: playlist.relatedStreams.map(stream => \"https://youtube.com\" + stream.url),\n            };\n        },\n        async importPlaylists() {\n            const files = this.$refs.fileSelector.files;\n            for (let file of files) {\n                await this.importPlaylistFile(file);\n            }\n            window.location.reload();\n        },\n        async importPlaylistFile(file) {\n            let text = (await file.text()).trim();\n            let tasks = [];\n            // list of playlists exported from Piped\n            if (file.name.slice(-4).toLowerCase() == \".csv\") {\n                const lines = text.split(\"\\n\");\n\n                // old format: first two lines contain playlist info (e.g. name) in CSV format\n                // new format: no information about playlist like name, ...\n                // video list has two columns: videoId and date of addition\n                const playlistInfo = lines[1].split(\",\");\n                let videoListStartIndex = 0;\n                let playlistName = null;\n                if (playlistInfo.length > 2) {\n                    playlistName = playlistInfo[4];\n                    videoListStartIndex = 4;\n                }\n\n                const playlist = {\n                    name: playlistName ?? new Date().toJSON(),\n                    videos: lines\n                        .slice(videoListStartIndex, lines.length)\n                        .filter(line => line != \"\")\n                        .slice(1)\n                        .map(line => `https://youtube.com/watch?v=${line.split(\",\")[0]}`),\n                };\n                tasks.push(this.createPlaylistWithVideos(playlist));\n            } else if (text.includes('\"Piped\"')) {\n                // CSV from Google Takeout\n                let playlists = JSON.parse(text).playlists;\n                if (!playlists.length) {\n                    alert(this.$t(\"actions.no_valid_playlists\"));\n                    return;\n                }\n                for (let playlist of playlists) {\n                    tasks.push(this.createPlaylistWithVideos(playlist));\n                }\n            } else {\n                alert(this.$t(\"actions.no_valid_playlists\"));\n                return;\n            }\n            await Promise.all(tasks);\n        },\n        async createPlaylistWithVideos(playlist) {\n            let newPlaylist = await this.createPlaylist(playlist.name);\n            let videoIds = playlist.videos.map(url => url.substr(-11));\n            await this.addVideosToPlaylist(newPlaylist.playlistId, videoIds);\n        },\n        async loadPlaylistBookmarks() {\n            if (!window.db) return;\n            var tx = window.db.transaction(\"playlist_bookmarks\", \"readonly\");\n            var store = tx.objectStore(\"playlist_bookmarks\");\n            const cursorRequest = store.openCursor();\n            cursorRequest.onsuccess = e => {\n                const cursor = e.target.result;\n                if (cursor) {\n                    this.bookmarks.push(cursor.value);\n                    cursor.continue();\n                }\n            };\n        },\n        async removeBookmark(index) {\n            var tx = window.db.transaction(\"playlist_bookmarks\", \"readwrite\");\n            var store = tx.objectStore(\"playlist_bookmarks\");\n            store.delete(this.bookmarks[index].playlistId);\n            this.bookmarks.splice(index, 1);\n        },\n    },\n};\n</script>\n"],"names":["_sfc_main","components","ConfirmModal","ModalComponent","CreatePlaylistModal","data","playlists","bookmarks","playlistToDelete","playlistToEdit","newPlaylistName","newPlaylistDescription","showCreatePlaylistModal","mounted","this","fetchPlaylists","loadPlaylistBookmarks","activated","document","title","$t","methods","getPlaylists","then","json","showPlaylistEditModal","playlist","name","description","id","editPlaylist","selectedPlaylist","newName","newDescription","renamePlaylist","error","alert","changePlaylistDescription","onDeletePlaylist","deletePlaylist","filter","exportPlaylists","format","version","tasks","map","fetchPlaylistJson","Promise","all","download","JSON","stringify","playlistId","getPlaylist","type","visibility","videos","relatedStreams","stream","url","importPlaylists","files","$refs","fileSelector","file","importPlaylistFile","window","location","reload","text","trim","slice","toLowerCase","lines","split","playlistInfo","videoListStartIndex","playlistName","length","Date","toJSON","line","push","createPlaylistWithVideos","includes","parse","newPlaylist","createPlaylist","videoIds","substr","addVideosToPlaylist","db","transaction","objectStore","openCursor","onsuccess","e","cursor","target","result","value","continue","removeBookmark","index","delete","splice","_hoisted_1","class","_hoisted_2","_hoisted_3","for","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_createElementVNode","_hoisted_17","key","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_openBlock","_createElementBlock","_Fragment","_withDirectives","onClick","$data","$options","args","_createCommentVNode","ref","multiple","onChange","_hoisted_4","_renderList","_createVNode","_component_router_link","to","default","_withCtx","src","thumbnail","alt","textContent","_toDisplayString","_ctx","style","display","_","$event","_createBlock","_component_ModalComponent","onClose","_cache","placeholder","_component_ConfirmModal","message","onConfirm","_hoisted_16","_hoisted_18","_withModifiers","_hoisted_24","href","uploaderUrl","uploaderAvatar","uploader","_hoisted_29","_component_CreatePlaylistModal","onCreated"],"mappings":"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"}