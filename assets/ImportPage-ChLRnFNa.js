import{a as c,c as a,b as n,t as u,C as d,w as p,k as h,I as f,o as b}from"./index-DFHtCH6M.js";const m={data(){return{subscriptions:[],override:!1}},computed:{selectedSubscriptions(){return this.subscriptions.length}},activated(){document.title="Import - Piped"},methods:{fileChange(){const r=this.$refs.fileSelector.files[0];r.text().then(e=>{if(this.subscriptions=[],e.indexOf("opml")!=-1)new DOMParser().parseFromString(e,"text/xml").querySelectorAll("outline[xmlUrl]").forEach(i=>{const l=i.getAttribute("xmlUrl").slice(-24);this.subscriptions.push(l)});else if(e.indexOf("subscriptions")!=-1)JSON.parse(e).subscriptions.filter(t=>t.service_id==0||t.service_id==null).forEach(t=>{const o=t.url.slice(-24);this.subscriptions.push(o)});else if(e.indexOf("thin_mode")!=-1){const s=JSON.parse(e);this.subscriptions=s.subscriptions}else if(e.indexOf("allChannels")!=-1){const s=e.split("\n");for(let t of s){if(t==="")continue;JSON.parse(t).subscriptions.forEach(o=>{this.subscriptions.push(o.id)})}}else if(e.indexOf("contentDetails")!=-1)JSON.parse(e).forEach(t=>{const i=t.snippet.resourceId.channelId;this.subscriptions.push(i)});else if(r.name.length>=5&&r.name.slice(-4).toLowerCase()==".csv"){const s=e.split("\n");for(let t=1;t<s.length;t++){const i=s[t],o=i.slice(0,i.indexOf(","));o.length===24&&this.subscriptions.push(o)}}})},handleImport(){this.authenticated?this.fetchJson(this.authApiUrl()+"/import",{override:this.override},{method:"POST",headers:{Authorization:this.getAuthToken()},body:JSON.stringify(this.subscriptions)}).then(r=>{r.message==="ok"&&(window.location="/feed")}):(this.importSubscriptionsLocally(this.subscriptions),window.location="/feed")},importSubscriptionsLocally(r){var s;const e=this.override?[...new Set(r)]:[...new Set(((s=this.getLocalSubscriptions())!=null?s:[]).concat(r))];e.sort();try{localStorage.setItem("localSubscriptions",JSON.stringify(e))}catch(t){alert(this.$t("info.local_storage"))}}}},g={class:"text-center"},S=["textContent"],v=f('<br><strong>Importing Subscriptions from YouTube</strong><br><div> Open <a href="https://takeout.google.com/takeout/custom/youtube">takeout.google.com/takeout/custom/youtube</a><br> In &quot;Select data to include&quot;, click on &quot;All YouTube data included&quot; and select only &quot;subscriptions&quot;. <br> Create the export and download the zip file. <br> Extract subscriptions.csv from the zip file. <br> Select and import the file above. </div><br><strong>Importing Subscriptions from Invidious</strong><br><div> Open <a href="https://invidio.us/data_control">invidiou.us/data_control</a><br> Click on any of the export options. <br> Select and import the file above. </div><br><strong>Importing Subscriptions from NewPipe</strong><br><div> Go to the Feed tab. <br> Click on the arrow on where it says &quot;Subscriptions&quot;. <br> Save the file somewhere. <br> Select and import the file above. </div>',12);function O(r,e,s,t,i,o){return b(),a("div",g,[n("form",null,[n("div",null,[n("input",{ref:"fileSelector",type:"file",onChange:e[0]||(e[0]=(...l)=>o.fileChange&&o.fileChange(...l))},null,544)]),n("div",null,[n("strong",{textContent:u("Selected Subscriptions: ".concat(o.selectedSubscriptions))},null,8,S)]),n("div",null,[n("strong",null,[d("Override: "),p(n("input",{"onUpdate:modelValue":e[1]||(e[1]=l=>i.override=l),class:"checkbox",type:"checkbox"},null,512),[[h,i.override]])])]),n("div",null,[n("a",{class:"btn w-auto",onClick:e[2]||(e[2]=(...l)=>o.handleImport&&o.handleImport(...l))},"Import")])]),v])}const x=c(m,[["render",O]]);export{x as default};
//# sourceMappingURL=ImportPage-ChLRnFNa.js.map
