{"version":3,"file":"WatchOnButton-Dm950qLy.js","sources":["../../src/components/ErrorHandler.vue","../../node_modules/dompurify/dist/purify.es.mjs","../../node_modules/linkifyjs/dist/linkify.es.js","../../node_modules/linkify-html/dist/linkify-html.es.js","../../src/utils/HtmlUtils.js","../../src/components/CollapsableText.vue","../../src/components/WatchOnButton.vue"],"sourcesContent":["<template>\n    <p v-text=\"message\" />\n    <button v-t=\"'actions.show_more'\" class=\"btn\" @click=\"toggleTrace\" />\n    <p ref=\"stacktrace\" class=\"whitespace-pre-wrap\" hidden v-text=\"error\" />\n</template>\n\n<script>\nexport default {\n    props: {\n        error: { type: String, default: null },\n        message: { type: String, default: null },\n    },\n    methods: {\n        toggleTrace() {\n            this.$refs.stacktrace.hidden = !this.$refs.stacktrace.hidden;\n        },\n    },\n};\n</script>\n","/*! @license DOMPurify 3.1.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT\n});\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '3.1.6';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n    // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR,\n    // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n    // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS,\n    // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n","import { Options, tokenize as tokenize$1 } from 'linkifyjs';\n\n/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nvar HTML5NamedCharRefs = {\n  // We don't need the complete named character reference because linkifyHtml\n  // does not modify the escape sequences. We do need &nbsp; so that\n  // whitespace is parsed properly. Other types of whitespace should already\n  // be accounted for. &gt; &lt; and &quot; are also frequently relevant ones\n  amp: \"&\",\n  gt: \">\",\n  lt: \"<\",\n  nbsp: \" \",\n  quot: \"\\\"\"\n};\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\nvar EntityParser = /** @class */function () {\n  function EntityParser(named) {\n    this.named = named;\n  }\n  EntityParser.prototype.parse = function (entity) {\n    if (!entity) {\n      return;\n    }\n    var matches = entity.match(HEXCHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 16));\n    }\n    matches = entity.match(CHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 10));\n    }\n    matches = entity.match(NAMED);\n    if (matches) {\n      return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n    }\n  };\n  return EntityParser;\n}();\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\nfunction isSpace(char) {\n  return WSP.test(char);\n}\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\nfunction preprocessInput(input) {\n  return input.replace(CRLF, '\\n');\n}\nvar EventedTokenizer = /** @class */function () {\n  function EventedTokenizer(delegate, entityParser, mode) {\n    if (mode === void 0) {\n      mode = 'precompile';\n    }\n    this.delegate = delegate;\n    this.entityParser = entityParser;\n    this.mode = mode;\n    this.state = \"beforeData\" /* beforeData */;\n    this.line = -1;\n    this.column = -1;\n    this.input = '';\n    this.index = -1;\n    this.tagNameBuffer = '';\n    this.states = {\n      beforeData: function () {\n        var char = this.peek();\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else {\n          if (this.mode === 'precompile' && char === '\\n') {\n            var tag = this.tagNameBuffer.toLowerCase();\n            if (tag === 'pre' || tag === 'textarea') {\n              this.consume();\n            }\n          }\n          this.transitionTo(\"data\" /* data */);\n          this.delegate.beginData();\n        }\n      },\n      data: function () {\n        var char = this.peek();\n        var tag = this.tagNameBuffer;\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.delegate.finishData();\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n          this.consume();\n          this.delegate.appendToData(this.consumeCharRef() || '&');\n        } else {\n          this.consume();\n          this.delegate.appendToData(char);\n        }\n      },\n      tagOpen: function () {\n        var char = this.consume();\n        if (char === '!') {\n          this.transitionTo(\"markupDeclarationOpen\" /* markupDeclarationOpen */);\n        } else if (char === '/') {\n          this.transitionTo(\"endTagOpen\" /* endTagOpen */);\n        } else if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"tagName\" /* tagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginStartTag();\n          this.appendToTagName(char);\n        }\n      },\n      markupDeclarationOpen: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.consume();\n          this.transitionTo(\"commentStart\" /* commentStart */);\n          this.delegate.beginComment();\n        } else {\n          var maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n          if (maybeDoctype === 'DOCTYPE') {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.transitionTo(\"doctype\" /* doctype */);\n            if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n          }\n        }\n      },\n      doctype: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypeName\" /* beforeDoctypeName */);\n        }\n      },\n\n      beforeDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else {\n          this.transitionTo(\"doctypeName\" /* doctypeName */);\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      doctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterDoctypeName\" /* afterDoctypeName */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      afterDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          var nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n          var isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n          var isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n          if (isPublic || isSystem) {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n          }\n          if (isPublic) {\n            this.transitionTo(\"afterDoctypePublicKeyword\" /* afterDoctypePublicKeyword */);\n          } else if (isSystem) {\n            this.transitionTo(\"afterDoctypeSystemKeyword\" /* afterDoctypeSystemKeyword */);\n          }\n        }\n      },\n\n      afterDoctypePublicKeyword: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypePublicIdentifier\" /* beforeDoctypePublicIdentifier */);\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypePublicIdentifierDoubleQuoted\" /* doctypePublicIdentifierDoubleQuoted */);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypePublicIdentifierSingleQuoted\" /* doctypePublicIdentifierSingleQuoted */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n\n      doctypePublicIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      doctypePublicIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      afterDoctypePublicIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"betweenDoctypePublicAndSystemIdentifiers\" /* betweenDoctypePublicAndSystemIdentifiers */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n\n      betweenDoctypePublicAndSystemIdentifiers: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n\n      doctypeSystemIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      doctypeSystemIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      afterDoctypeSystemIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n\n      commentStart: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentStartDash\" /* commentStartDash */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData(char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      commentStartDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('-');\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      comment: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEndDash\" /* commentEndDash */);\n        } else {\n          this.delegate.appendToCommentData(char);\n        }\n      },\n      commentEndDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else {\n          this.delegate.appendToCommentData('-' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      commentEnd: function () {\n        var char = this.consume();\n        if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('--' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      tagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      endTagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n          this.tagNameBuffer = '';\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.tagNameBuffer = '';\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n          this.tagNameBuffer = '';\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      beforeAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '=') {\n          this.delegate.reportSyntaxError('attribute name cannot start with equals sign');\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n        }\n      },\n      attributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterAttributeName\" /* afterAttributeName */);\n          this.consume();\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"' || char === \"'\" || char === '<') {\n          this.delegate.reportSyntaxError(char + ' is not a valid character within attribute names');\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      afterAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.consume();\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      beforeAttributeValue: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"attributeValueDoubleQuoted\" /* attributeValueDoubleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"attributeValueSingleQuoted\" /* attributeValueSingleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"attributeValueUnquoted\" /* attributeValueUnquoted */);\n          this.delegate.beginAttributeValue(false);\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueUnquoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '&') {\n          this.consume();\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else if (char === '>') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      afterAttributeValueQuoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n\n      selfClosingStartTag: function () {\n        var char = this.peek();\n        if (char === '>') {\n          this.consume();\n          this.delegate.markTagAsSelfClosing();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n\n      endTagOpen: function () {\n        var char = this.consume();\n        if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"endTagName\" /* endTagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginEndTag();\n          this.appendToTagName(char);\n        }\n      }\n    };\n    this.reset();\n  }\n  EventedTokenizer.prototype.reset = function () {\n    this.transitionTo(\"beforeData\" /* beforeData */);\n    this.input = '';\n    this.tagNameBuffer = '';\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n    this.delegate.reset();\n  };\n  EventedTokenizer.prototype.transitionTo = function (state) {\n    this.state = state;\n  };\n  EventedTokenizer.prototype.tokenize = function (input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  };\n  EventedTokenizer.prototype.tokenizePart = function (input) {\n    this.input += preprocessInput(input);\n    while (this.index < this.input.length) {\n      var handler = this.states[this.state];\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(\"unhandled state \" + this.state);\n      }\n    }\n  };\n  EventedTokenizer.prototype.tokenizeEOF = function () {\n    this.flushData();\n  };\n  EventedTokenizer.prototype.flushData = function () {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(\"beforeData\" /* beforeData */);\n    }\n  };\n\n  EventedTokenizer.prototype.peek = function () {\n    return this.input.charAt(this.index);\n  };\n  EventedTokenizer.prototype.consume = function () {\n    var char = this.peek();\n    this.index++;\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n    return char;\n  };\n  EventedTokenizer.prototype.consumeCharRef = function () {\n    var endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n    if (chars) {\n      var count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n      return chars;\n    }\n  };\n  EventedTokenizer.prototype.markTagStart = function () {\n    this.delegate.tagOpen();\n  };\n  EventedTokenizer.prototype.appendToTagName = function (char) {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  };\n  EventedTokenizer.prototype.isIgnoredEndTag = function () {\n    var tag = this.tagNameBuffer;\n    return tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>' || tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>' || tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>';\n  };\n  return EventedTokenizer;\n}();\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(entityParser, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.options = options;\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n    this.tokens = [];\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n  Tokenizer.prototype.tokenize = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizePart = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizeEOF = function () {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  };\n  Tokenizer.prototype.reset = function () {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  };\n  Tokenizer.prototype.current = function () {\n    var token = this.token;\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n    if (arguments.length === 0) {\n      return token;\n    }\n    for (var i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n    throw new Error(\"token type was unexpectedly \" + token.type);\n  };\n  Tokenizer.prototype.push = function (token) {\n    this.token = token;\n    this.tokens.push(token);\n  };\n  Tokenizer.prototype.currentAttribute = function () {\n    return this._currentAttribute;\n  };\n  Tokenizer.prototype.addLocInfo = function () {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  };\n  // Data\n  Tokenizer.prototype.beginDoctype = function () {\n    this.push({\n      type: \"Doctype\" /* Doctype */,\n      name: ''\n    });\n  };\n  Tokenizer.prototype.appendToDoctypeName = function (char) {\n    this.current(\"Doctype\" /* Doctype */).name += char;\n  };\n  Tokenizer.prototype.appendToDoctypePublicIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.appendToDoctypeSystemIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.endDoctype = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.beginData = function () {\n    this.push({\n      type: \"Chars\" /* Chars */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToData = function (char) {\n    this.current(\"Chars\" /* Chars */).chars += char;\n  };\n  Tokenizer.prototype.finishData = function () {\n    this.addLocInfo();\n  };\n  // Comment\n  Tokenizer.prototype.beginComment = function () {\n    this.push({\n      type: \"Comment\" /* Comment */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToCommentData = function (char) {\n    this.current(\"Comment\" /* Comment */).chars += char;\n  };\n  Tokenizer.prototype.finishComment = function () {\n    this.addLocInfo();\n  };\n  // Tags - basic\n  Tokenizer.prototype.tagOpen = function () {};\n  Tokenizer.prototype.beginStartTag = function () {\n    this.push({\n      type: \"StartTag\" /* StartTag */,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  };\n  Tokenizer.prototype.beginEndTag = function () {\n    this.push({\n      type: \"EndTag\" /* EndTag */,\n      tagName: ''\n    });\n  };\n  Tokenizer.prototype.finishTag = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.markTagAsSelfClosing = function () {\n    this.current(\"StartTag\" /* StartTag */).selfClosing = true;\n  };\n  // Tags - name\n  Tokenizer.prototype.appendToTagName = function (char) {\n    this.current(\"StartTag\" /* StartTag */, \"EndTag\" /* EndTag */).tagName += char;\n  };\n  // Tags - attributes\n  Tokenizer.prototype.beginAttribute = function () {\n    this._currentAttribute = ['', '', false];\n  };\n  Tokenizer.prototype.appendToAttributeName = function (char) {\n    this.currentAttribute()[0] += char;\n  };\n  Tokenizer.prototype.beginAttributeValue = function (isQuoted) {\n    this.currentAttribute()[2] = isQuoted;\n  };\n  Tokenizer.prototype.appendToAttributeValue = function (char) {\n    this.currentAttribute()[1] += char;\n  };\n  Tokenizer.prototype.finishAttributeValue = function () {\n    this.current(\"StartTag\" /* StartTag */).attributes.push(this._currentAttribute);\n  };\n  Tokenizer.prototype.reportSyntaxError = function (message) {\n    this.current().syntaxError = message;\n  };\n  return Tokenizer;\n}();\nfunction tokenize(input, options) {\n  var tokenizer = new Tokenizer(new EntityParser(HTML5NamedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\n\nconst LinkifyResult = 'LinkifyResult';\nconst StartTag = 'StartTag';\nconst EndTag = 'EndTag';\nconst Chars = 'Chars';\nconst Comment = 'Comment';\nconst Doctype = 'Doctype';\n\n/**\n * @param {string} str html string to link\n * @param {import('linkifyjs').Opts} [opts] linkify options\n * @returns {string} resulting string\n */\nfunction linkifyHtml(str, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  // `tokens` and `token` in this section refer to tokens generated by the\n  // HTML parser, not linkify's parser\n  const tokens = tokenize(str);\n  const linkifiedTokens = [];\n  const linkified = [];\n  const options = new Options(opts, defaultRender);\n\n  // Linkify the tokens given by the parser\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === StartTag) {\n      linkifiedTokens.push(token);\n\n      // Ignore all the contents of ignored tags\n      const tagName = token.tagName.toUpperCase();\n      const isIgnored = tagName === 'A' || options.ignoreTags.indexOf(tagName) >= 0;\n      if (!isIgnored) {\n        continue;\n      }\n      let preskipLen = linkifiedTokens.length;\n      skipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n      i += linkifiedTokens.length - preskipLen - 1;\n    } else if (token.type !== Chars) {\n      // Skip this token, it's not important\n      linkifiedTokens.push(token);\n    } else {\n      // Valid text token, linkify it!\n      const linkifedChars = linkifyChars(token.chars, options);\n      linkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n    }\n  }\n\n  // Convert the tokens back into a string\n  for (let i = 0; i < linkifiedTokens.length; i++) {\n    const token = linkifiedTokens[i];\n    switch (token.type) {\n      case LinkifyResult:\n        linkified.push(token.rendered);\n        break;\n      case StartTag:\n        {\n          let link = '<' + token.tagName;\n          if (token.attributes.length > 0) {\n            link += ' ' + attributeArrayToStrings(token.attributes).join(' ');\n          }\n          if (token.selfClosing) {\n            link += ' /';\n          }\n          link += '>';\n          linkified.push(link);\n          break;\n        }\n      case EndTag:\n        linkified.push(`</${token.tagName}>`);\n        break;\n      case Chars:\n        linkified.push(escapeText(token.chars));\n        break;\n      case Comment:\n        linkified.push(`<!--${escapeText(token.chars)}-->`);\n        break;\n      case Doctype:\n        {\n          let doctype = `<!DOCTYPE ${token.name}`;\n          if (token.publicIdentifier) {\n            doctype += ` PUBLIC \"${token.publicIdentifier}\"`;\n          }\n          if (token.systemIdentifier) {\n            doctype += ` \"${token.systemIdentifier}\"`;\n          }\n          doctype += '>';\n          linkified.push(doctype);\n          break;\n        }\n    }\n  }\n  return linkified.join('');\n}\n\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n\t@param {string}\n\t@param {import('linkifyjs').Options}\n*/\nfunction linkifyChars(str, options) {\n  const tokens = tokenize$1(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && options.get('nl2br')) {\n      result.push({\n        type: StartTag,\n        tagName: 'br',\n        attributes: [],\n        selfClosing: true\n      });\n    } else if (!token.isLink || !options.check(token)) {\n      result.push({\n        type: Chars,\n        chars: token.toString()\n      });\n    } else {\n      result.push({\n        type: LinkifyResult,\n        rendered: options.render(token)\n      });\n    }\n  }\n  return result;\n}\n\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n  // number of tokens of this type on the [fictional] stack\n  let stackCount = 1;\n  while (i < tokens.length && stackCount > 0) {\n    let token = tokens[i];\n    if (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n      // Nested tag of the same type, \"add to stack\"\n      stackCount++;\n    } else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n      // Closing tag\n      stackCount--;\n    }\n    skippedTokens.push(token);\n    i++;\n  }\n\n  // Note that if stackCount > 0 here, the HTML is probably invalid\n  return skippedTokens;\n}\nfunction defaultRender(_ref) {\n  let {\n    tagName,\n    attributes,\n    content\n  } = _ref;\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\nfunction escapeText(text) {\n  return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(attr) {\n  return attr.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    const val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction attributeArrayToStrings(attrs) {\n  const attrStrs = [];\n  for (let i = 0; i < attrs.length; i++) {\n    const name = attrs[i][0];\n    const value = attrs[i][1] + '';\n    attrStrs.push(`${name}=\"${escapeAttr(value)}\"`);\n  }\n  return attrStrs;\n}\n\nexport { linkifyHtml as default };\n","import DOMPurify from \"dompurify\";\n\nexport const purifyHTML = html => {\n    return DOMPurify.sanitize(html);\n};\n\nimport linkifyHtml from \"linkify-html\";\n\nexport const rewriteDescription = text => {\n    return linkifyHtml(text)\n        .replaceAll(/(?:http(?:s)?:\\/\\/)?(?:www\\.)?youtube\\.com(\\/[/a-zA-Z0-9_?=&-]*)/gm, \"$1\")\n        .replaceAll(/(?:http(?:s)?:\\/\\/)?(?:www\\.)?youtu\\.be\\/(?:watch\\?v=)?([/a-zA-Z0-9_?=&-]*)/gm, \"/watch?v=$1\")\n        .replaceAll(\"\\n\", \"<br>\");\n};\n","<template>\n    <div v-if=\"text\" class=\"mx-1 whitespace-pre-wrap py-2\">\n        <!-- eslint-disable-next-line vue/no-v-html -->\n        <span v-if=\"showFullText\" class=\"contentText\" v-html=\"fullText()\" />\n        <!-- eslint-disable-next-line vue/no-v-html -->\n        <span v-else v-html=\"collapsedText()\" />\n        <span v-if=\"text.length > visibleLimit && !showFullText\">...</span>\n        <button\n            v-if=\"text.length > visibleLimit\"\n            class=\"block whitespace-normal text-neutral-500 font-semibold hover:underline\"\n            @click=\"showFullText = !showFullText\"\n        >\n            [{{ showFullText ? $t(\"actions.show_less\") : $t(\"actions.show_more\") }}]\n        </button>\n    </div>\n</template>\n\n<script>\nimport { purifyHTML, rewriteDescription } from \"@/utils/HtmlUtils\";\n\nexport default {\n    props: {\n        text: {\n            type: String,\n            default: null,\n        },\n        visibleLimit: {\n            type: Number,\n            default: 100,\n        },\n    },\n    data() {\n        return {\n            showFullText: false,\n        };\n    },\n    methods: {\n        fullText() {\n            return purifyHTML(rewriteDescription(this.text));\n        },\n        collapsedText() {\n            return purifyHTML(rewriteDescription(this.text.slice(0, this.visibleLimit)));\n        },\n    },\n};\n</script>\n\n<style>\n.contentText {\n    word-wrap: anywhere;\n}\n</style>\n","<script>\nexport default {\n    props: {\n        link: {\n            type: String,\n            required: true,\n        },\n        platform: {\n            type: String,\n            required: false,\n            default: \"YouTube\",\n        },\n    },\n};\n</script>\n\n<template>\n    <template v-if=\"getPreferenceBoolean('showWatchOnYouTube', false)\">\n        <!-- For large screens -->\n        <a :href=\"link\" class=\"btn flex items-center lt-lg:hidden\">\n            <i18n-t keypath=\"player.watch_on\" tag=\"strong\">{{ platform }}</i18n-t>\n            <i v-if=\"platform == 'YouTube'\" class=\"i-fa6-brands:youtube mx-1.5\" />\n            <i v-else-if=\"platform == 'Odysee'\" class=\"i-fa6-brands:odysee mx-1.5\" />\n        </a>\n        <!-- For small screens -->\n        <a :href=\"link\" class=\"btn flex items-center lg:hidden\">\n            <i v-if=\"platform == 'YouTube'\" class=\"i-fa6-brands:youtube mx-1.5\" />\n            <i v-else-if=\"platform == 'Odysee'\" class=\"i-fa6-brands:odysee mx-1.5\" />\n        </a>\n    </template>\n</template>\n"],"names":["_sfc_main","_hoisted_1","_hoisted_2","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","$props","$options","args","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","x","fun","thisValue","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","l","element","lcElement","cleanArray","index","clone","object","newObject","property","value","lookupGetter","prop","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","suffix","ATTR_NAME","policyName","scriptUrl","_","createDOMPurify","window","DOMPurify","root","document","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","parentTagName","_forceRemove","node","_removeAttribute","name","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","body","_createNodeIterator","_isClobbered","elm","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","content","_isBasicCustomElement","parentNode","childNodes","childCount","i","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attributes","hookEvent","attr","namespaceURI","attrValue","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","tag","hookFunction","purify","encodedTlds","encodedUtlds","assign","target","properties","key","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","groups","addToGroups","t","flags","k","group","flagsForToken","result","c","State","token","input","state","nextState","regex","exactOnly","inputs","next","regexp","len","templateState","allFlags","ta","tr","ts","tt","WORD","UWORD","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL$1","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","ASCII_LETTER","LETTER","EMOJI","DIGIT","SPACE","NL","EMOJI_VARIATION","EMOJI_JOINER","tlds","utlds","init$2","customSchemes","Start","decodeTlds","Num","Word","UWord","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","fastts","a","b","sch","run$1","start","str","iterable","stringToArray","charCount","tokens","cursor","charCursor","tokenLength","latestAccepting","sinceAccepts","charsSinceAccepts","first","second","char","defaultt","jr","encoded","words","stack","digits","popDigitCount","popCount","defaults","noop","Options","opts","defaultRender","o","ignoredTags","uppercaseIgnoredTags","ir","operator","isCallable","option","obj","val","MultiToken","options","truncate","formatted","protocol","href","formattedHref","className","rel","attrs","eventListeners","createTokenClass","type","props","Token","p","Email","Text","Nl","Url","makeState","arg","init$1","_ref","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","run","multis","textTokens","secondState","multiLength","initMultiToken","Multi","subtokens","startIdx","endIdx","INIT","init","tokenize","HTML5NamedCharRefs","HEXCHARCODE","CHARCODE","NAMED","EntityParser","named","entity","WSP","ALPHA","CRLF","isSpace","isAlpha","preprocessInput","EventedTokenizer","delegate","entityParser","mode","maybeDoctype","nextSixChars","isPublic","isSystem","handler","endIndex","chars","count","Tokenizer","doctype","isQuoted","message","tokenizer","LinkifyResult","StartTag","EndTag","Chars","Comment","Doctype","linkifyHtml","linkifiedTokens","linkified","preskipLen","skipTagTokens","linkifedChars","linkifyChars","link","attributeArrayToStrings","escapeText","tokenize$1","skippedTokens","stackCount","attributesToString","escapeAttr","attrStrs","purifyHTML","rewriteDescription","_hoisted_3","$data","_hoisted_4","_createCommentVNode","_cache","$event","_ctx","_createVNode","_component_i18n_t","_withCtx","_createTextVNode","_hoisted_5","_hoisted_6"],"mappings":"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","x_google_ignoreList":[1,2,3]}