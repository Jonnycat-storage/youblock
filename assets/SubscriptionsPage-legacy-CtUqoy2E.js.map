{"version":3,"file":"SubscriptionsPage-legacy-CtUqoy2E.js","sources":["../../src/components/SubscriptionsPage.vue"],"sourcesContent":["<template>\n    <h1 v-t=\"'titles.subscriptions'\" class=\"my-4 text-center font-bold\" />\n    <!-- import / export section -->\n    <div class=\"flex flex-wrap justify-between\">\n        <div class=\"flex gap-1\">\n            <!-- import json/csv -->\n            <button class=\"btn\">\n                <router-link v-t=\"'actions.import_from_json_csv'\" to=\"/import\" />\n            </button>\n            <!-- export to json -->\n            <button v-t=\"'actions.export_to_json'\" class=\"btn\" @click=\"exportHandler\" />\n        </div>\n        <div class=\"m-1 flex flex-wrap gap-1\">\n            <!-- import channel groups to json-->\n            <div>\n                <label\n                    for=\"fileSelector\"\n                    class=\"btn\"\n                    v-text=\"`${$t('actions.import_from_json')} (${$t('titles.channel_groups')})`\"\n                />\n                <input\n                    id=\"fileSelector\"\n                    ref=\"fileSelector\"\n                    type=\"file\"\n                    class=\"hidden\"\n                    multiple=\"multiple\"\n                    @change=\"importGroupsHandler\"\n                />\n            </div>\n\n            <!-- export channel groups to json  -->\n            <button\n                class=\"btn\"\n                @click=\"exportGroupsHandler\"\n                v-text=\"`${$t('actions.export_to_json')} (${$t('titles.channel_groups')})`\"\n            />\n        </div>\n        <!-- subscriptions count, only shown if there are any  -->\n        <div v-if=\"subscriptions.length > 0\" class=\"flex self-center gap-1\">\n            <i18n-t keypath=\"subscriptions.subscribed_channels_count\">{{ subscriptions.length }}</i18n-t>\n        </div>\n    </div>\n    <br />\n    <hr />\n    <div class=\"w-full flex flex-wrap\">\n        <button\n            v-for=\"group in channelGroups\"\n            :key=\"group.groupName\"\n            class=\"btn mx-1 w-max\"\n            :class=\"{ selected: selectedGroup === group }\"\n            @click=\"selectGroup(group)\"\n        >\n            <span v-text=\"group.groupName !== '' ? group.groupName : $t('video.all')\" />\n            <div v-if=\"group.groupName != '' && selectedGroup == group\">\n                <i class=\"i-fa6-solid:pen mx-2\" @click=\"showEditGroupModal = true\" />\n                <i class=\"i-fa6-solid:circle-minus mx-2\" @click=\"groupToDelete = group.groupName\" />\n            </div>\n        </button>\n        <ConfirmModal\n            v-if=\"groupToDelete != null\"\n            :message=\"$t('actions.delete_group_confirm')\"\n            @close=\"groupToDelete = null\"\n            @confirm=\"deleteGroup(groupToDelete)\"\n        />\n        <button class=\"btn mx-1\" @click=\"showCreateGroupModal = true\">\n            <i class=\"i-fa6-solid:circle-plus\" />\n        </button>\n    </div>\n    <br />\n    <hr />\n    <!-- Subscriptions card list -->\n    <div class=\"xl:grid xl:grid-cols-5 <md:flex-wrap\">\n        <!-- channel info card -->\n        <div\n            v-for=\"subscription in filteredSubscriptions\"\n            :key=\"subscription.url\"\n            class=\"col m-2 border border-gray-500 rounded-lg p-1\"\n        >\n            <router-link :to=\"subscription.url\" class=\"text-4x4 flex p-2 font-bold\">\n                <img :src=\"subscription.avatar\" class=\"h-[fit-content] rounded-full\" width=\"48\" height=\"48\" />\n                <span class=\"mx-2 self-center\" v-text=\"subscription.name\" />\n            </router-link>\n            <!-- subscribe / unsubscribe btn -->\n            <button\n                v-t=\"`actions.${subscription.subscribed ? 'unsubscribe' : 'subscribe'}`\"\n                class=\"btn mt-2 w-full\"\n                @click=\"handleButton(subscription)\"\n            />\n        </div>\n    </div>\n    <br />\n\n    <CreateGroupModal\n        v-if=\"showCreateGroupModal\"\n        :on-create-group=\"createGroup\"\n        @close=\"showCreateGroupModal = false\"\n    />\n\n    <ModalComponent v-if=\"showEditGroupModal\" @close=\"showEditGroupModal = false\">\n        <div class=\"mb-5 mt-3 flex justify-between\">\n            <input v-model=\"editedGroupName\" type=\"text\" class=\"input\" />\n            <button v-t=\"'actions.okay'\" class=\"btn\" :placeholder=\"$t('actions.group_name')\" @click=\"editGroupName()\" />\n        </div>\n        <div class=\"mb-2 mt-3 h-[80vh] flex flex-col overflow-y-scroll pr-2\">\n            <div v-for=\"subscription in subscriptions\" :key=\"subscription.name\">\n                <div class=\"mr-3 flex items-center justify-between\">\n                    <a :href=\"subscription.url\" target=\"_blank\" class=\"flex items-center overflow-hidden\">\n                        <img :src=\"subscription.avatar\" class=\"h-8 w-8 rounded-full\" />\n                        <span class=\"ml-2\">{{ subscription.name }}</span>\n                    </a>\n                    <input\n                        type=\"checkbox\"\n                        class=\"checkbox\"\n                        :checked=\"selectedGroup.channels.includes(subscription.url.substr(-24))\"\n                        @change=\"checkedChange(subscription)\"\n                    />\n                </div>\n                <hr />\n            </div>\n        </div>\n    </ModalComponent>\n</template>\n\n<script>\nimport ModalComponent from \"./ModalComponent.vue\";\nimport CreateGroupModal from \"./CreateGroupModal.vue\";\nimport ConfirmModal from \"./ConfirmModal.vue\";\n\nexport default {\n    components: { ModalComponent, CreateGroupModal, ConfirmModal },\n    data() {\n        return {\n            subscriptions: [],\n            selectedGroup: {\n                groupName: \"\",\n                channels: [],\n            },\n            channelGroups: [],\n            showCreateGroupModal: false,\n            showEditGroupModal: false,\n            editedGroupName: \"\",\n            groupToDelete: null,\n        };\n    },\n    computed: {\n        filteredSubscriptions(_this) {\n            return _this.selectedGroup.groupName == \"\"\n                ? _this.subscriptions\n                : _this.subscriptions.filter(channel => _this.selectedGroup.channels.includes(channel.url.substr(-24)));\n        },\n    },\n    mounted() {\n        this.fetchSubscriptions().then(json => {\n            if (json.error) {\n                alert(json.error);\n                return;\n            }\n\n            this.subscriptions = json;\n            this.subscriptions.forEach(subscription => (subscription.subscribed = true));\n        });\n\n        this.channelGroups.push(this.selectedGroup);\n        if (!window.db) return;\n\n        this.loadChannelGroups();\n    },\n    activated() {\n        document.title = \"Subscriptions - Piped\";\n    },\n    methods: {\n        async loadChannelGroups() {\n            const groups = await this.getChannelGroups();\n            this.channelGroups.push(...groups);\n        },\n        handleButton(subscription) {\n            const channelId = subscription.url.split(\"/\")[2];\n            if (this.authenticated) {\n                this.fetchJson(this.authApiUrl() + (subscription.subscribed ? \"/unsubscribe\" : \"/subscribe\"), null, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        channelId: channelId,\n                    }),\n                    headers: {\n                        Authorization: this.getAuthToken(),\n                        \"Content-Type\": \"application/json\",\n                    },\n                });\n            } else {\n                this.handleLocalSubscriptions(channelId);\n            }\n            subscription.subscribed = !subscription.subscribed;\n        },\n        exportHandler() {\n            const subscriptions = [];\n            this.subscriptions.forEach(subscription => {\n                subscriptions.push({\n                    url: \"https://www.youtube.com\" + subscription.url,\n                    name: subscription.name,\n                    service_id: 0,\n                });\n            });\n            const json = JSON.stringify({\n                app_version: \"\",\n                app_version_int: 0,\n                subscriptions: subscriptions,\n            });\n            this.download(json, \"subscriptions.json\", \"application/json\");\n        },\n        selectGroup(group) {\n            this.selectedGroup = group;\n            this.editedGroupName = group.groupName;\n        },\n        createGroup(newGroupName) {\n            if (!newGroupName || this.channelGroups.some(group => group.groupName == newGroupName)) return;\n\n            const newGroup = {\n                groupName: newGroupName,\n                channels: [],\n            };\n            this.channelGroups.push(newGroup);\n            this.createOrUpdateChannelGroup(newGroup);\n\n            this.showCreateGroupModal = false;\n        },\n        editGroupName() {\n            const oldGroupName = this.selectedGroup.groupName;\n            const newGroupName = this.editedGroupName;\n\n            // the group mustn't yet exist and the name can't be empty\n            if (!newGroupName || newGroupName == oldGroupName) return;\n            if (this.channelGroups.some(group => group.groupName == newGroupName)) return;\n\n            // create a new group with the same info and delete the old one\n            this.selectedGroup.groupName = newGroupName;\n            this.createOrUpdateChannelGroup(this.selectedGroup);\n            this.deleteChannelGroup(oldGroupName);\n\n            this.showEditGroupModal = false;\n        },\n        deleteGroup(group) {\n            this.deleteChannelGroup(group);\n            this.channelGroups = this.channelGroups.filter(g => g.groupName != group);\n            this.selectedGroup = this.channelGroups[0] || {};\n            this.groupToDelete = null;\n        },\n        checkedChange(subscription) {\n            const channelId = subscription.url.substr(-24);\n            this.selectedGroup.channels = this.selectedGroup.channels.includes(channelId)\n                ? this.selectedGroup.channels.filter(channel => channel != channelId)\n                : this.selectedGroup.channels.concat(channelId);\n            this.createOrUpdateChannelGroup(this.selectedGroup);\n        },\n        async importGroupsHandler() {\n            const files = this.$refs.fileSelector.files;\n            for (let file of files) {\n                const groups = JSON.parse(await file.text()).groups;\n                for (let group of groups) {\n                    this.createOrUpdateChannelGroup(group);\n                    this.channelGroups.push(group);\n                }\n            }\n        },\n        exportGroupsHandler() {\n            const json = {\n                format: \"Piped\",\n                version: 1,\n                groups: this.channelGroups.slice(1),\n            };\n            this.download(JSON.stringify(json), \"channel_groups.json\", \"application/json\");\n        },\n    },\n};\n</script>\n\n<style>\n.selected {\n    border: 0.1rem outset red;\n}\n</style>\n"],"names":["_sfc_main","components","ModalComponent","CreateGroupModal","ConfirmModal","data","subscriptions","selectedGroup","groupName","channels","channelGroups","showCreateGroupModal","showEditGroupModal","editedGroupName","groupToDelete","computed","filteredSubscriptions","_this","filter","channel","includes","url","substr","mounted","this","fetchSubscriptions","then","json","error","alert","forEach","subscription","subscribed","push","window","db","loadChannelGroups","activated","document","title","methods","groups","getChannelGroups","handleButton","channelId","split","authenticated","fetchJson","authApiUrl","method","body","JSON","stringify","headers","Authorization","getAuthToken","handleLocalSubscriptions","exportHandler","name","service_id","app_version","app_version_int","download","selectGroup","group","createGroup","newGroupName","some","newGroup","createOrUpdateChannelGroup","editGroupName","oldGroupName","deleteChannelGroup","deleteGroup","g","checkedChange","concat","importGroupsHandler","files","$refs","fileSelector","file","parse","text","exportGroupsHandler","format","version","slice","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","key","_createElementVNode","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_15","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_openBlock","_createElementBlock","_Fragment","_withDirectives","_createVNode","_component_router_link","to","onClick","$options","args","for","textContent","_toDisplayString","_ctx","$t","id","ref","type","multiple","onChange","$data","length","_hoisted_8","_component_i18n_t","keypath","default","_withCtx","_createTextVNode","_","_createCommentVNode","_hoisted_9","_hoisted_10","_renderList","_normalizeClass","selected","$event","_hoisted_14","_createBlock","_component_ConfirmModal","message","onClose","onConfirm","_cache","_hoisted_17","_hoisted_18","_hoisted_19","src","avatar","width","height","_directive_t","_hoisted_24","_component_CreateGroupModal","_component_ModalComponent","placeholder","href","target","checked","_hoisted_33"],"mappings":"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"}