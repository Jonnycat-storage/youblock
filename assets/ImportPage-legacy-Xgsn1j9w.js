System.register(["./index-legacy-CmTDz3X_.js"],(function(t,e){"use strict";var i,s,o,n,r,l,c,u,a;return{setters:[t=>{i=t.a,s=t.c,o=t.b,n=t.t,r=t.C,l=t.w,c=t.k,u=t.I,a=t.o}],execute:function(){const e={data:()=>({subscriptions:[],override:!1}),computed:{selectedSubscriptions(){return this.subscriptions.length}},activated(){document.title="Import - Piped"},methods:{fileChange(){const t=this.$refs.fileSelector.files[0];t.text().then((e=>{if(this.subscriptions=[],-1!=e.indexOf("opml"))(new DOMParser).parseFromString(e,"text/xml").querySelectorAll("outline[xmlUrl]").forEach((t=>{const e=t.getAttribute("xmlUrl").slice(-24);this.subscriptions.push(e)}));else if(-1!=e.indexOf("subscriptions"))JSON.parse(e).subscriptions.filter((t=>0==t.service_id||null==t.service_id)).forEach((t=>{const e=t.url.slice(-24);this.subscriptions.push(e)}));else if(-1!=e.indexOf("thin_mode")){const t=JSON.parse(e);this.subscriptions=t.subscriptions}else if(-1!=e.indexOf("allChannels")){const t=e.split("\n");for(let e of t)""!==e&&JSON.parse(e).subscriptions.forEach((t=>{this.subscriptions.push(t.id)}))}else if(-1!=e.indexOf("contentDetails"))JSON.parse(e).forEach((t=>{const e=t.snippet.resourceId.channelId;this.subscriptions.push(e)}));else if(t.name.length>=5&&".csv"==t.name.slice(-4).toLowerCase()){const t=e.split("\n");for(let e=1;e<t.length;e++){const i=t[e],s=i.slice(0,i.indexOf(","));24===s.length&&this.subscriptions.push(s)}}}))},handleImport(){this.authenticated?this.fetchJson(this.authApiUrl()+"/import",{override:this.override},{method:"POST",headers:{Authorization:this.getAuthToken()},body:JSON.stringify(this.subscriptions)}).then((t=>{"ok"===t.message&&(window.location="/feed")})):(this.importSubscriptionsLocally(this.subscriptions),window.location="/feed")},importSubscriptionsLocally(t){const e=this.override?[...new Set(t)]:[...new Set((this.getLocalSubscriptions()??[]).concat(t))];e.sort();try{localStorage.setItem("localSubscriptions",JSON.stringify(e))}catch(i){alert(this.$t("info.local_storage"))}}}},p={class:"text-center"},d=["textContent"],h=u('<br><strong>Importing Subscriptions from YouTube</strong><br><div> Open <a href="https://takeout.google.com/takeout/custom/youtube">takeout.google.com/takeout/custom/youtube</a><br> In &quot;Select data to include&quot;, click on &quot;All YouTube data included&quot; and select only &quot;subscriptions&quot;. <br> Create the export and download the zip file. <br> Extract subscriptions.csv from the zip file. <br> Select and import the file above. </div><br><strong>Importing Subscriptions from Invidious</strong><br><div> Open <a href="https://invidio.us/data_control">invidiou.us/data_control</a><br> Click on any of the export options. <br> Select and import the file above. </div><br><strong>Importing Subscriptions from NewPipe</strong><br><div> Go to the Feed tab. <br> Click on the arrow on where it says &quot;Subscriptions&quot;. <br> Save the file somewhere. <br> Select and import the file above. </div>',12);t("default",i(e,[["render",function(t,e,i,u,b,f){return a(),s("div",p,[o("form",null,[o("div",null,[o("input",{ref:"fileSelector",type:"file",onChange:e[0]||(e[0]=(...t)=>f.fileChange&&f.fileChange(...t))},null,544)]),o("div",null,[o("strong",{textContent:n(`Selected Subscriptions: ${f.selectedSubscriptions}`)},null,8,d)]),o("div",null,[o("strong",null,[r("Override: "),l(o("input",{"onUpdate:modelValue":e[1]||(e[1]=t=>b.override=t),class:"checkbox",type:"checkbox"},null,512),[[c,b.override]])])]),o("div",null,[o("a",{class:"btn w-auto",onClick:e[2]||(e[2]=(...t)=>f.handleImport&&f.handleImport(...t))},"Import")])]),h])}]]))}}}));
//# sourceMappingURL=ImportPage-legacy-Xgsn1j9w.js.map
